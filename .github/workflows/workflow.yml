name: Publish Python Package

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  test:
    strategy:
      matrix:
        python-version: ["3.9", "3.12"]
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      #----------------------------------------------
      # check-out repo and set-up python
      #----------------------------------------------
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      # install & configure poetry
      #----------------------------------------------
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Generate Poetry Lock File
        run: |
          poetry lock
      #----------------------------------------------
      # load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      #----------------------------------------------
      # run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source $VENV
          poetry run pytest
  # gitea-releases:
  #   strategy:
  #     matrix:
  #       python-version: ["3.9"]
  #       os: ["ubuntu-22.04"]
  #   defaults:
  #     run:
  #       shell: bash
  #   runs-on: ${{ matrix.os }}
  #   needs: [test]
  #   if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
  #   steps:
  #     #----------------------------------------------
  #     # check-out repo and set-up python
  #     #----------------------------------------------
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     #----------------------------------------------
  #     # build poetry package
  #     #----------------------------------------------
  #     - name: Install and configure Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true
  #     - name: Build poetry package
  #       run: |
  #         poetry lock
  #         poetry install --no-interaction --no-root
  #         source $VENV
  #         poetry build
  #     #----------------------------------------------
  #     # create release
  #     #   reference: https://gitea.com/actions/gitea-release-action
  #     #----------------------------------------------
  #     - name: Create Release
  #       uses: akkuman/gitea-release-action@v1
  #       with:
  #         files: |
  #           dist/*
  publish-pypi:
    runs-on: ubuntu-latest
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v2.0
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          plugins: "poetry-dynamic-versioning[plugin]"
